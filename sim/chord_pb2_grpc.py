# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import chord_pb2 as chord__pb2


class ChordStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.join = channel.unary_unary(
        '/chord.Chord/join',
        request_serializer=chord__pb2.JoinReq.SerializeToString,
        response_deserializer=chord__pb2.JoinResp.FromString,
        )
    self.getInfo = channel.unary_unary(
        '/chord.Chord/getInfo',
        request_serializer=chord__pb2.GetInfoReq.SerializeToString,
        response_deserializer=chord__pb2.GetInfoResp.FromString,
        )
    self.findSucc = channel.unary_unary(
        '/chord.Chord/findSucc',
        request_serializer=chord__pb2.FindSuccReq.SerializeToString,
        response_deserializer=chord__pb2.FindSuccResp.FromString,
        )
    self.findPred = channel.unary_unary(
        '/chord.Chord/findPred',
        request_serializer=chord__pb2.FindPredReq.SerializeToString,
        response_deserializer=chord__pb2.FindPredResp.FromString,
        )
    self.closestPredFinger = channel.unary_unary(
        '/chord.Chord/closestPredFinger',
        request_serializer=chord__pb2.ClosestPredFingerReq.SerializeToString,
        response_deserializer=chord__pb2.ClosestPredFingerResp.FromString,
        )
    self.stabilize = channel.unary_unary(
        '/chord.Chord/stabilize',
        request_serializer=chord__pb2.StabilizeReq.SerializeToString,
        response_deserializer=chord__pb2.StabilizeResp.FromString,
        )
    self.notify = channel.unary_unary(
        '/chord.Chord/notify',
        request_serializer=chord__pb2.NotifyReq.SerializeToString,
        response_deserializer=chord__pb2.NotifyResp.FromString,
        )
    self.fixFingers = channel.unary_unary(
        '/chord.Chord/fixFingers',
        request_serializer=chord__pb2.FixFingersReq.SerializeToString,
        response_deserializer=chord__pb2.FixFingersResp.FromString,
        )


class ChordServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def join(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findSucc(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findPred(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def closestPredFinger(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def stabilize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def notify(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fixFingers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChordServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'join': grpc.unary_unary_rpc_method_handler(
          servicer.join,
          request_deserializer=chord__pb2.JoinReq.FromString,
          response_serializer=chord__pb2.JoinResp.SerializeToString,
      ),
      'getInfo': grpc.unary_unary_rpc_method_handler(
          servicer.getInfo,
          request_deserializer=chord__pb2.GetInfoReq.FromString,
          response_serializer=chord__pb2.GetInfoResp.SerializeToString,
      ),
      'findSucc': grpc.unary_unary_rpc_method_handler(
          servicer.findSucc,
          request_deserializer=chord__pb2.FindSuccReq.FromString,
          response_serializer=chord__pb2.FindSuccResp.SerializeToString,
      ),
      'findPred': grpc.unary_unary_rpc_method_handler(
          servicer.findPred,
          request_deserializer=chord__pb2.FindPredReq.FromString,
          response_serializer=chord__pb2.FindPredResp.SerializeToString,
      ),
      'closestPredFinger': grpc.unary_unary_rpc_method_handler(
          servicer.closestPredFinger,
          request_deserializer=chord__pb2.ClosestPredFingerReq.FromString,
          response_serializer=chord__pb2.ClosestPredFingerResp.SerializeToString,
      ),
      'stabilize': grpc.unary_unary_rpc_method_handler(
          servicer.stabilize,
          request_deserializer=chord__pb2.StabilizeReq.FromString,
          response_serializer=chord__pb2.StabilizeResp.SerializeToString,
      ),
      'notify': grpc.unary_unary_rpc_method_handler(
          servicer.notify,
          request_deserializer=chord__pb2.NotifyReq.FromString,
          response_serializer=chord__pb2.NotifyResp.SerializeToString,
      ),
      'fixFingers': grpc.unary_unary_rpc_method_handler(
          servicer.fixFingers,
          request_deserializer=chord__pb2.FixFingersReq.FromString,
          response_serializer=chord__pb2.FixFingersResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'chord.Chord', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
